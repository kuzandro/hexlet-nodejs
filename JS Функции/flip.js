Во многих языках программирования существует интересная функция flip. Её необычность заключается в том, что единственная цель этой функции — это преобразовать другую функцию так, чтобы порядок её аргументов был обратным.

Например, у нас может быть функция pow, которая возводит первый аргумент в степень второго. flip вернет нам новую функцию, у которой первый аргумент — это степень, а второй — это число, которое нужно возводить в эту степень.

Эта функция бывает очень полезна при активной работе с функциями высшего порядка, она часто упрощает возможность комбинировать функции между собой.

solution.js
Реализуйте и экспортируйте по умолчанию функцию flip. Данная версия flip работает только с функциями принимающими два аргумента.

// subtraction
const sub = (a, b) => a - b;
const reverseSub = flip(sub);

sub(5, 3); // 2
reverseSub(5, 3); // -2

// exponentiation
const wop = flip(Math.pow);

Math.pow(1, 2); // 1
wop(1, 2); // 2

Math.pow(3, 2); // 9
wop(3, 2); // 8

Мое решение:

// BEGIN (write your solution here)
const flip= f => (arg1, arg2) => f(arg2, arg1);

export default flip;
// END

Решение учителя:

// BEGIN
export default f => (a, b) => f(b, a);
// END

Анализ и сравнение:

Написал чисто интуитивно, надо будет еще пройтись по теме